Index: FMGDA/run.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import matplotlib.pyplot as plt\r\nimport torch\r\nimport torch.nn as nn\r\nfrom torch.utils.data import DataLoader\r\nimport swanlab\r\nfrom data_load import generate_multi_mnist, split_data_to_servers\r\nfrom model.ClientModel import ClientMTLModel\r\nfrom model.ServiceModel import ServerSharedModel\r\nfrom optim.client_optim import ClientAgg\r\nfrom optim.service_optim import ServicAgg\r\nfrom utils.options import args_parser, last_client_init\r\n\r\n\r\ndef train(args, server_model, client_model, client_datasets, method: str, last_shared_parameters=None,\r\n          last_client_grads=None):\r\n    print(f\"======== batch_size {args.batch_size} ========\")\r\n    print(f\"==={args.method} Federal Round {epoch}/{args.global_epochs} ===\")\r\n\r\n    # 超参设置\r\n    args.device = torch.device('cuda:{}'.format(args.gpu) if torch.cuda.is_available() and args.gpu != -1 else 'cpu')\r\n    torch.manual_seed(args.seed)\r\n    args.method = method\r\n\r\n    client_models = []\r\n    task1_loss_locals = []\r\n    task2_loss_locals = []\r\n\r\n    # 客户端本地训练\r\n    client_models_gard = []\r\n    server_model = server_model.to(args.device)\r\n    client_model = client_model.to(args.device)\r\n    for client_idx, dataset in client_datasets.items():\r\n        # 加载本地数据\r\n        train_loader = DataLoader(dataset, batch_size=args.batch_size, shuffle=True)\r\n        # 本地多任务训练\r\n        # client_model = ClientMTLModel(server_model).to(args.device)\r\n        if args.method == 'fmgda_s':\r\n            client_local = ClientAgg(args.method, args, client_model, train_loader,\r\n                                     last_shared_parameters=last_shared_parameters,\r\n                                     last_client_grads=last_client_grads, )\r\n        else:\r\n            client_local = ClientAgg(args.method, args, client_model, train_loader, )\r\n        client_model, client_gard, task_loss = client_local.backward()\r\n\r\n        client_models.append(client_model)\r\n        client_models_gard.append(client_gard)\r\n\r\n        # 记录客户端各任务loss\r\n        task1_loss_locals.append(task_loss[0])\r\n        task2_loss_locals.append(task_loss[1])\r\n\r\n    task1_loss_avg = sum(task1_loss_locals) / len(task1_loss_locals)\r\n    task2_loss_avg = sum(task2_loss_locals) / len(task2_loss_locals)\r\n\r\n    # loss_history['task1'][\"batch_size {}\".format(batch_size)].append(task1_loss_avg.detach().numpy())\r\n    # loss_history['task2'][\"batch_size {}\".format(batch_size)].append(task2_loss_avg.detach().numpy())\r\n\r\n    # 服务端共享层参数更新\r\n    servicagg = ServicAgg(args, server_model, client_models_gard)\r\n    if args.method == 'fmgda_s':\r\n        last_shared_parameters = servicagg.get_last_model_parm()\r\n    else:\r\n        pass\r\n    last_client_shared_parameters, server_model = servicagg.backward()  # last_client_shared_parameters返回的结构为向量结构\r\n\r\n    # 更新客户端共享层模型\r\n    client_model.shared_layer.load_state_dict(server_model.shared_parameters.state_dict())\r\n\r\n    print(\r\n        \"task1 loss:{:.4f}\".format(task1_loss_avg), \"task2 loss:{:.4f}\".format(task2_loss_avg))\r\n    print(\"----------------------------------------------\")\r\n    swanlab.log({\"train_task1_loss\": task1_loss_avg.item(), \"train_task2_loss\": task2_loss_avg.item()})\r\n\r\n    return client_models\r\n\r\n\r\ndef test(args, client_models, test_data):\r\n    # 评估全局模型（以客户端0为例）\r\n    criterion = nn.CrossEntropyLoss()\r\n    client0_model = client_models[0].to(args.device)\r\n    client0_model.eval()\r\n\r\n    total_correct_task1 = 0\r\n    total_correct_task2 = 0\r\n    train_loader_test = DataLoader(test_data, batch_size=args.batch_size, shuffle=True)\r\n    with torch.no_grad():\r\n        for data, (target1, target2) in train_loader_test:\r\n            data, target_task1, target_task2 = data.to(args.device), target1.to(args.device), target2.to(\r\n                args.device)\r\n\r\n            pred_task1, pred_task2 = client0_model(data)\r\n\r\n            # loss\r\n            # total_loss_task1 += criterion(pred_task1, target_task1)\r\n            # total_loss_task2 += criterion(pred_task2, target_task2)\r\n\r\n            # correct\r\n            pred1 = pred_task1.argmax(dim=1, keepdim=True)\r\n            total_correct_task1 += pred1.eq(target_task1.view_as(pred1)).sum().item()\r\n\r\n            pred2 = pred_task2.argmax(dim=1, keepdim=True)\r\n            total_correct_task2 += pred2.eq(target_task2.view_as(pred2)).sum().item()\r\n    accuracy_task1 = total_correct_task1 / len(train_loader_test.dataset) * 100\r\n    accuracy_task2 = total_correct_task2 / len(train_loader_test.dataset) * 100\r\n    print(\r\n        'Client 0 Test - task1 correct:{:.2f}%'.format(accuracy_task1),\r\n        'task2 correct:{:.2f}%'.format(accuracy_task2))\r\n    swanlab.log({\"test_task1_acc\": accuracy_task1, \"test_task2_acc\": accuracy_task2})\r\n\r\n\r\n# # 绘制损失曲线\r\n# plt.figure(figsize=(10, 6))\r\n# task1_loss = loss_history[\"task1\"]\r\n# for i in args.batch_size_list:\r\n#     plt.plot(task1_loss[\"batch_size {}\".format(i)], label=\"batch_size {}\".format(i))\r\n# plt.title(\"Task1 Loss\")\r\n# plt.xlabel(\"Global Epoch\")\r\n# plt.ylabel(\"Average Local Loss\")\r\n# plt.legend()\r\n# plt.grid(False)\r\n# # 保存图像\r\n# plt.savefig(\r\n#     'task1_mulit_loss_curve_method{}_num_servers{}_num_rounds{}_local_rate{}.png'.format(args.method,\r\n#                                                                                          args.num_clients,\r\n#                                                                                          args.global_epochs,\r\n#                                                                                          args.local_lr),\r\n#     dpi=300, bbox_inches='tight')\r\n#\r\n# plt.figure(figsize=(10, 6))\r\n# task2_loss = loss_history[\"task2\"]\r\n# for i in args.batch_size_list:\r\n#     plt.plot(task2_loss[\"batch_size {}\".format(i)], label=\"batch_size {}\".format(i))\r\n# plt.title(\"Task2 Loss\")\r\n# plt.xlabel(\"Global Epoch\")\r\n# plt.ylabel(\"Average Local Loss\")\r\n# plt.legend()\r\n# plt.grid(False)\r\n#\r\n# # 保存图像\r\n# plt.savefig('task2_mulit_loss_curve_method{}_num_servers{}_num_rounds{}_local_rate{}.png'.format(args.method,\r\n#                                                                                                  args.num_clients,\r\n#                                                                                                  args.global_epochs,\r\n#                                                                                                  args.local_lr),\r\n#             dpi=300, bbox_inches='tight')\r\n# plt.show()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    args = args_parser()\r\n    args.method = 'fmgda'\r\n\r\n    # 准备原始数据集\r\n    # 不同分类生成一个批次\r\n    train_dataset = generate_multi_mnist(num_samples=60000)\r\n\r\n    # 生成测试数据\r\n    test_dataset = generate_multi_mnist(num_samples=6000, train=False)\r\n\r\n    sample_index = [i for i in range(6000)]  # 假设取随机6000个训练数据\r\n    X_train = []\r\n    y_train = []\r\n    for i in sample_index:\r\n        X = train_dataset[i][0]\r\n        X_train.append(X)\r\n        y = train_dataset[i][1]\r\n        y_train.append(y)\r\n\r\n    sampled_train_data = [(X, y) for X, y in zip(X_train, y_train)]  # 包装为数据对\r\n\r\n    client_datasets = split_data_to_servers(sampled_train_data, num_servers=args.num_clients)  # 将训练集分给客户端\r\n\r\n    sample_test_index = [i for i in range(256)]  # 假设取随机256个训练数据\r\n    X_test = []\r\n    y_test = []\r\n    for i in sample_test_index:\r\n        X = test_dataset[i][0]\r\n        X_train.append(X)\r\n        y = test_dataset[i][1]\r\n        y_train.append(y)\r\n\r\n    sampled_test_data = [(X, y) for X, y in zip(X_train, y_train)]  # 包装为数据对\r\n\r\n    # 创建一个SwanLab项目\r\n    swanlab.init(\r\n        # 设置项目名\r\n        project=\"FMGDA\",\r\n        # 设置实验名称\r\n        experiment_name=f\"{args.method}\",\r\n        # 设置超参数\r\n        config={\r\n            \"global_lr\": args.global_lr,\r\n            \"local_lr\": args.local_lr,\r\n            \"num_clients\": args.num_clients,\r\n            \"num_tasks\": args.num_tasks,\r\n            \"global_epochs\": args.global_epochs,\r\n            \"local_epochs\": args.local_epochs,\r\n            \"method\": args.method,\r\n        }\r\n    )\r\n\r\n    # 初始化模型参数\r\n    server_model = ServerSharedModel()\r\n    client_model = ClientMTLModel(server_model)\r\n\r\n    # method == fmgda_s时对下列参数初始化\r\n    # last_shared_parameters = client_model.shared_layer.state_dict()\r\n    # last_client_grads = last_client_init(client_model)\r\n\r\n    # 开始训练\r\n    for epoch in range(1, args.global_epochs + 1):\r\n        client_models = train(args, server_model, client_model, client_datasets=client_datasets, method=args.method)\r\n\r\n        if epoch % 4 == 0:  # Test every 4 epochs\r\n            test(args, client_models, test_data=sampled_test_data)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FMGDA/run.py b/FMGDA/run.py
--- a/FMGDA/run.py	(revision 28465e571ed23ac3074e1403407eae7d4734f1c3)
+++ b/FMGDA/run.py	(date 1749890095520)
@@ -185,7 +185,7 @@
         # 设置项目名
         project="FMGDA",
         # 设置实验名称
-        experiment_name=f"{args.method}",
+        experiment_name=f"{args.method}_{args.batch_size}",
         # 设置超参数
         config={
             "global_lr": args.global_lr,
@@ -195,6 +195,7 @@
             "global_epochs": args.global_epochs,
             "local_epochs": args.local_epochs,
             "method": args.method,
+            "beta": args.beta,
         }
     )
 
Index: FMGDA/test.py
===================================================================
diff --git a/FMGDA/test.py b/FMGDA/test.py
deleted file mode 100644
--- a/FMGDA/test.py	(revision 28465e571ed23ac3074e1403407eae7d4734f1c3)
+++ /dev/null	(revision 28465e571ed23ac3074e1403407eae7d4734f1c3)
@@ -1,7 +0,0 @@
-from utils.options import args_parser
-
-args = args_parser()
-print(args.method)
-
-args.method = 'fm'
-print(args.method)
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1d90cdd7-a626-4c65-8cff-fbadfa499321\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/FMGDA.iml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"associatedIndex\": 8\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"2yUR5Q9bFzVdULFtWJRgl5Yz1Da\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"master\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-50da183f06c8-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.13135.95\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1d90cdd7-a626-4c65-8cff-fbadfa499321\" name=\"Changes\" comment=\"\" />\r\n      <created>1749886981817</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1749886981817</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 28465e571ed23ac3074e1403407eae7d4734f1c3)
+++ b/.idea/workspace.xml	(date 1749889258054)
@@ -1,39 +1,52 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
   <component name="ChangeListManager">
-    <list default="true" id="1d90cdd7-a626-4c65-8cff-fbadfa499321" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.idea/FMGDA.iml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+    <list default="true" id="1d90cdd7-a626-4c65-8cff-fbadfa499321" name="Changes" comment="第一版框架更新">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/FMGDA/11.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/FMGDA/methods/WeightedMethod.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/FMGDA/methods/__init__.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/FMGDA/test.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/FMGDA/utils/__init__.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/FMGDA/utils/options.py" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Python Script" />
+      </list>
+    </option>
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "associatedIndex": 8
-}]]></component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 8
+}</component>
   <component name="ProjectId" id="2yUR5Q9bFzVdULFtWJRgl5Yz1Da" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "master"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;
   }
-}]]></component>
+}</component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
@@ -50,6 +63,19 @@
       <option name="presentableId" value="Default" />
       <updated>1749886981817</updated>
     </task>
+    <task id="LOCAL-00001" summary="第一版框架更新">
+      <option name="closed" value="true" />
+      <created>1749888618479</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1749888618479</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="第一版框架更新" />
+    <option name="LAST_COMMIT_MESSAGE" value="第一版框架更新" />
+  </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Pytorch\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 28465e571ed23ac3074e1403407eae7d4734f1c3)
+++ b/.idea/misc.xml	(date 1749888930143)
@@ -1,4 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="Black">
+    <option name="sdkName" value="Pytorch" />
+  </component>
   <component name="ProjectRootManager" version="2" project-jdk-name="Pytorch" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
diff --git a/FMGDA/11.py b/FMGDA/11.py
deleted file mode 100644
